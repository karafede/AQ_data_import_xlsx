function datasetout = import_station_detail(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE4 Import data from a spreadsheet
%   DATA = IMPORTFILE4(FILE) reads data from the first worksheet in the
%   Microsoft Excel spreadsheet file named FILE and returns the data as a
%   dataset array.
%
%   DATA = IMPORTFILE4(FILE,SHEET) reads from the specified worksheet.
%
%   DATA = IMPORTFILE4(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Non-numeric cells are replaced with: NaN
%
% Example:
%   StationsDM = importfile4('Stations_DM.xlsx','DM',2,14);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2016/12/22 11:41:24

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 2;
    endRow = 14;
end

%% Import the data
[~, ~, raw] = xlsread(workbookFile, sheetName, sprintf('A%d:AC%d',startRow(1),endRow(1)));
for block=2:length(startRow)
    [~, ~, tmpRawBlock] = xlsread(workbookFile, sheetName, sprintf('A%d:AC%d',startRow(block),endRow(block)));
    raw = [raw;tmpRawBlock]; %#ok<AGROW>
end
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};
cellVectors = raw(:,[1,2,5,6]);
raw = raw(:,[3,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create dataset array
datasetout = dataset;

%% Allocate imported array to column variable names
datasetout.Site = cellVectors(:,1);
datasetout.Site_Type = cellVectors(:,2);
datasetout.Latitude = data(:,1);
datasetout.longitude = data(:,2);
datasetout.Emirate = cellVectors(:,3);
datasetout.Authority = cellVectors(:,4);
datasetout.SO2 = data(:,3);
datasetout.NO2 = data(:,4);
datasetout.O3 = data(:,5);
datasetout.CO = data(:,6);
datasetout.PM10 = data(:,7);
datasetout.PM25 = data(:,8);
datasetout.LowerAmbientTemperature = data(:,9);
datasetout.UpperAmbientTemperature = data(:,10);
datasetout.BarometricPressure = data(:,11);
datasetout.RelativeHumidity = data(:,12);
datasetout.WindDirection = data(:,13);
datasetout.WindSpeed = data(:,14);
datasetout.H2S = data(:,15);
datasetout.Toluene = data(:,16);
datasetout.OXylene = data(:,17);
datasetout.EthylBenzene = data(:,18);
datasetout.mpxylene = data(:,19);
datasetout.Benzene = data(:,20);
datasetout.CH2 = data(:,21);
datasetout.NMHC = data(:,22);
datasetout.THC = data(:,23);
datasetout.Noise = data(:,24);
datasetout.Total = data(:,25);

