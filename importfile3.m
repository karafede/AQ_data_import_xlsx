function datasetout = importfile3(workbookFile,sheetName,startRow,endRow)
%IMPORTFILE3 Import data from a spreadsheet
%   IMPORTFILE3(FILE) reads data from the first worksheet in the Microsoft
%   Excel spreadsheet file named FILE and returns the data as a dataset
%   array.
%
%   IMPORTFILE3(FILE,SHEET) reads from the specified worksheet.
%
%   IMPORTFILE3(FILE,SHEET,STARTROW,ENDROW) reads from the specified
%   worksheet for the specified row interval(s). Specify STARTROW and
%   ENDROW as a pair of scalars or vectors of matching size for
%   dis-contiguous row intervals. To read to the end of the file specify an
%   ENDROW of inf.
%
%	Date formatted cells are converted to MATLAB serial date number format
%	(datenum).
%   Non-numeric cells are replaced with: NaN
%
% Example:
%   importfile3('DM data  1st Quar. 2015.xlsx','Deira',10,19720);
%
%   See also XLSREAD.

% Auto-generated by MATLAB on 2016/12/21 18:00:49

%% Input handling

% If no sheet is specified, read first sheet
if nargin == 1 || isempty(sheetName)
    sheetName = 1;
end

% If row start and end points are not specified, define defaults
if nargin <= 3
    startRow = 10;
    endRow = 8769;
end

%% Import the data, extracting spreadsheet dates in MATLAB serial date number format (datenum)
[~, ~, raw1] = xlsread(workbookFile, sheetName, sprintf('A%d:C%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw2] = xlsread(workbookFile, sheetName, sprintf('F%d:F%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw3] = xlsread(workbookFile, sheetName, sprintf('I%d:I%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw4] = xlsread(workbookFile, sheetName, sprintf('O%d:O%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw5] = xlsread(workbookFile, sheetName, sprintf('U%d:U%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw6] = xlsread(workbookFile, sheetName, sprintf('X%d:X%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
[~, ~, raw7] = xlsread(workbookFile, sheetName, sprintf('AA%d:AP%d',startRow(1),endRow(1)));%,'' , @convertSpreadsheetDates);
raw = [raw1,raw2,raw3,raw4,raw5,raw6,raw7];
%dateNums = [dateNums1,dateNums2,dateNums3,dateNums4,dateNums5,dateNums6,dateNums7];
for block=2:length(startRow)
    [~, ~, tmpRawBlock1] = xlsread(workbookFile, sheetName, sprintf('A%d:C%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock2] = xlsread(workbookFile, sheetName, sprintf('F%d:F%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock3] = xlsread(workbookFile, sheetName, sprintf('I%d:I%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock4] = xlsread(workbookFile, sheetName, sprintf('O%d:O%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock5] = xlsread(workbookFile, sheetName, sprintf('U%d:U%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock6] = xlsread(workbookFile, sheetName, sprintf('X%d:X%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    [~, ~, tmpRawBlock7] = xlsread(workbookFile, sheetName, sprintf('AA%d:AP%d',startRow(block),endRow(block)));%,'' , @convertSpreadsheetDates);
    raw = [raw;tmpRawBlock1,tmpRawBlock2,tmpRawBlock3,tmpRawBlock4,tmpRawBlock5,tmpRawBlock6,tmpRawBlock7]; %#ok<AGROW>
    
    %dateNums = [dateNums;tmpDateNumBlock1,tmpDateNumBlock2,tmpDateNumBlock3,tmpDateNumBlock4,tmpDateNumBlock5,tmpDateNumBlock6,tmpDateNumBlock7]; %#ok<AGROW>
end
raw_date=raw(:,2);
raw(cellfun(@(x) ~isempty(x) && isnumeric(x) && isnan(x),raw)) = {''};

%% Replace date strings by MATLAB serial date numbers (datenum)
%R = ~cellfun(@isequalwithequalnans,dateNums,raw) & cellfun('isclass',raw,'char'); % Find spreadsheet dates
%raw(R) = dateNums(R);

%% Replace non-numeric cells with NaN
R = cellfun(@(x) ~isnumeric(x) && ~islogical(x),raw); % Find non-numeric cells
raw(R) = {NaN}; % Replace non-numeric cells

%% Create output variable
data = reshape([raw{:}],size(raw));

%% Create dataset array
datasetout = dataset;

%% Allocate imported array to column variable names
datasetout.columnA = data(:,1);
datasetout.DateTime = raw_date;
datasetout.SO2 = data(:,3);
datasetout.NO2 = data(:,4);
datasetout.O3 = data(:,5);
datasetout.CO = data(:,6);
datasetout.PM10 = data(:,7);
datasetout.PM25 = data(:,8);
datasetout.LowerAmbientTemperature = data(:,9);
datasetout.UpperAmbientTemperature = data(:,10);
datasetout.BarometricPressure = data(:,11);
datasetout.RelativeHumidity = data(:,12);
datasetout.WindDirection = data(:,13);
datasetout.WindSpeed = data(:,14);
datasetout.H2S = data(:,15);
datasetout.Toluene = data(:,16);
datasetout.OXylene = data(:,17);
datasetout.EthylBenzene = data(:,18);
datasetout.mpxylene = data(:,19);
datasetout.Benzene = data(:,20);
datasetout.CH2 = data(:,21);
datasetout.NMHC = data(:,22);
datasetout.THC = data(:,23);
datasetout.Noise = data(:,24);

